import { useRouter } from "next/router";
import Link from "next/link";
import { useEffect, useState } from "react";
import Head from "next/head";
import Dashboard from "../components/Dashboard";
import { CalendarClock, Home, HomeIcon, List, MapPin, MapPinned, Phone, Tornado, Users, X } from "lucide-react";
import dayjs from "dayjs";
import Image from "next/image";
import { Button } from "../components/reusable/button";
import { useClerk } from "@clerk/nextjs";
import QRCode from "react-qr-code";

export default function DynamicPage() {
  const router = useRouter();
  const { id } = router.query;
  const [info, setInfo] = useState([]);
  const { user } = useClerk();
  const [success, setSuccess] = useState(false);
  const {basePath} = useRouter();

  useEffect(() => {
    fetch("/api/get-events")
      .then((response) => response.json())
      .then((data) => {
        setInfo(data);
        console.log("Sucesso:", data);
      })
      .catch((error) => {
        console.error("Erro:", error);
      });
    console.log(basePath);
  }, []);

  const filteredEvents = info.filter((card) => card.nm_event === id);

  // Assuming there's only one event with a given ID, you can take the first one.
  const event = filteredEvents[0];

  let imageSrc;

  if (event) {
    switch (event.type) {
      case "food":
        imageSrc =
          "https://images.unsplash.com/photo-1579705745811-a32bef7856a3?auto=format&fit=crop&q=80&w=2940&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D";
        break;
      case "clothes":
        imageSrc =
          "https://images.unsplash.com/photo-1574681357916-9d4464642696?auto=format&fit=crop&q=80&w=2940&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1pYWdlfHx8fGVufDB8fHx8fA%3D%3D";
        break;
      case "dinner":
        imageSrc =
          "https://images.unsplash.com/photo-1603208614636-aa308b918a32?auto=format&fit=crop&q=80&w=2944&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D";
        break;
      case "toys":
        imageSrc =
          "https://images.unsplash.com/photo-1566576912321-d58ddd7a6088?auto=format&fit=crop&q=80&w=2940&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D";
        break;
      default:
        imageSrc =
          "https://images.unsplash.com/photo-1582213782179-e0d53f98f2ca?auto=format&fit=crop&q=80&w=2940&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1pYWdlfHx8fGVufDB8fHx8fA%3D%3D";
    }
  }

  const handleOnClick = () => {
    setTimeout(() => {
      setSuccess(true);
    }, 3000);
  };

  return (
    <>
      <Head>
        <title>EventBuddy | {id}</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="h-auto w-screen">
          <Image
            src={imageSrc}
            alt=""
            width={1920}
            height={1080}
            className="max-h-[300px] w-full object-cover"
          />
        </div>
        <div className="relative bottom-20">
          <div className="mx-auto max-w-7xl flex-1 flex-col justify-center px-4 sm:px-6">
            {info
              .filter((card) => card.nm_event === id)
              .map((card) => (
                <div className="mb-4 rounded-lg border bg-secondary p-4">
                  <div className="p-5" key={card.nm_event}>
                    <div className="mb-2 flex items-center gap-4 border-b border-primary/40 p-4 text-sm font-medium text-muted-foreground ">
                      <div className="flex items-center gap-2 ">
                        <p className="text-3xl max-md:text-lg">Evento:</p>
                      </div>
                      <p className=" text-3xl max-md:text-lg">{card.nm_event}</p>
                      <HomeIcon className="ml-auto" size={32} />
                    </div>
                  </div>
                  <div className="p-5" key={card.nm_event}>
                    <div className="mb-2 flex items-center gap-4 border-b border-primary/40 p-4 text-sm font-medium text-muted-foreground ">
                      <div className="flex items-center gap-2 ">
                        <p className="text-3xl max-md:text-lg">Organizador:</p>
                      </div>
                      <p className=" text-3xl max-md:text-lg">{card.nm_user.name}</p>
                      <Users className="ml-auto" size={32} />
                    </div>
                  </div>
                  <div className="p-5">
                    <div className="mb-2 flex items-center gap-4 border-b border-primary/40 p-4 text-sm font-medium text-muted-foreground ">
                      <div className="flex items-center gap-2 ">
                        <p className="text-3xl max-md:text-lg">Data:</p>
                      </div>
                      <p className=" flex items-center text-3xl max-md:text-lg">
                        {dayjs(card.date).format("D MMMM YYYY hh:mm")}
                      </p>
                      <CalendarClock className="ml-auto" size={32} />
                    </div>
                  </div>
                  <div className="p-5">
                    <div className="mb-2 flex items-center gap-4 border-b border-primary/40 p-4 text-sm font-medium text-muted-foreground ">
                      <div className="flex items-center gap-2 ">
                        <p className="text-3xl max-md:text-lg">Cidade e Estado:</p>
                      </div>
                      <p className=" flex items-center text-3xl max-md:text-lg">
                        {card.city} / {card.state}
                      </p>
                      <MapPin className="ml-auto" size={32} />
                    </div>
                  </div>
                  <div className="p-5">
                    <div className="mb-2 flex items-center gap-4 border-b border-primary/40 p-4 text-sm font-medium text-muted-foreground ">
                      <div className="flex items-center gap-2 ">
                        <p className="text-3xl max-md:text-lg">Endereço:</p>
                      </div>
                      <p className=" flex items-center text-3xl max-md:text-lg">
                        {card.address}
                      </p>
                      <MapPinned className="ml-auto" size={32} />
                    </div>
                  </div>
                  <div className="p-5">
                    <div className="mb-2 flex items-center gap-4 border-b border-primary/40 p-4 text-sm font-medium text-muted-foreground ">
                      <div className="flex items-center gap-2 ">
                        <p className="text-3xl max-md:text-lg">Numero de Telefone:</p>
                      </div>
                      <p className=" flex items-center text-3xl max-md:text-lg">
                        {card.phone}
                      </p>
                      <Phone className="ml-auto" size={32} />
                    </div>
                  </div>
                  <div className="p-5">
                    <div className="mb-2 flex items-center gap-4 border-b border-primary/40 p-4 text-sm font-medium text-muted-foreground ">
                      <div className="flex items-center gap-2 ">
                        <p className="text-3xl max-md:text-lg">Tipo de evento:</p>
                      </div>
                      <p className=" flex items-center text-3xl max-md:text-lg">
                        {card.type === "food"
                          ? "Alimentos"
                          : card.type === "clothes"
                          ? "Roupas"
                          : card.type === "dinner"
                          ? "Jantar"
                          : card.type === "toys"
                          ? "Brinquedos"
                          : "Outros"}
                      </p>
                      <List className="ml-auto" size={32} />
                    </div>
                  </div>
                </div>
              ))}
            {!user?.id === event?.nm_user_id && (
              <div className="flex justify-center mt-2">
                <Button
                  size={"lg"}
                  className="mx-auto p-8 max-md:p-12"
                  onClick={handleOnClick}
                >
                  {success ? (
                    <p className="p-2 text-2xl">
                      Você se inscreveu com sucesso!
                    </p>
                  ) : (
                    <p className="p-2 text-2xl">
                      Se voluntarie para ajudar a organizar esse evento!
                    </p>
                  )}
                </Button>
              </div>
            )}
            <div className="flex justify-center mt-10">
              <QRCode 
                value={window.location.href}
                size={256}
                bgColor={"#ffffff"}
                fgColor={"#000000"}
                
              />
            </div>
          </div>
        </div>
      </main>
    </>
  );
}
